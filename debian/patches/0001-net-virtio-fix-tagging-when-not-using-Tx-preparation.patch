From d759dde04785f952bfdded36cfc417ba68d58276 Mon Sep 17 00:00:00 2001
From: "Charles (Chas) Williams" <ciwillia@vyatta.att-mail.com>
Date: Tue, 26 Nov 2019 10:42:51 -0500
Subject: [PATCH] net/virtio: fix tagging when not using Tx preparation

If RTE_ETHDEV_TX_PREPARE_NOOP is configured, then the virtio will need
to do the VLAN tag insertion on the transmit path.

Fixes: 3f8fb604748b ("net/virtio: add Tx preparation")
---
 drivers/net/virtio/virtio_rxtx.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

--- a/drivers/net/virtio/virtio_rxtx.c
+++ b/drivers/net/virtio/virtio_rxtx.c
@@ -1755,6 +1755,10 @@ virtio_xmit_pkts_packed(void *tx_queue,
 		virtio_xmit_cleanup_packed(vq, nb_pkts - vq->vq_free_cnt,
 					   in_order);
 
+#ifdef RTE_ETHDEV_TX_PREPARE_NOOP
+	nb_pkts = virtio_xmit_pkts_prepare(tx_queue, tx_pkts, nb_pkts);
+#endif
+
 	for (nb_tx = 0; nb_tx < nb_pkts; nb_tx++) {
 		struct rte_mbuf *txm = tx_pkts[nb_tx];
 		int can_push = 0, use_indirect = 0, slots, need;
@@ -1836,6 +1840,10 @@ virtio_xmit_pkts(void *tx_queue, struct
 	if (likely(nb_used > vq->vq_nentries - vq->vq_free_thresh))
 		virtio_xmit_cleanup(vq, nb_used);
 
+#ifdef RTE_ETHDEV_TX_PREPARE_NOOP
+	nb_pkts = virtio_xmit_pkts_prepare(tx_queue, tx_pkts, nb_pkts);
+#endif
+
 	for (nb_tx = 0; nb_tx < nb_pkts; nb_tx++) {
 		struct rte_mbuf *txm = tx_pkts[nb_tx];
 		int can_push = 0, use_indirect = 0, slots, need;
@@ -1938,6 +1946,10 @@ virtio_xmit_pkts_inorder(void *tx_queue,
 	if (likely(nb_used > vq->vq_nentries - vq->vq_free_thresh))
 		virtio_xmit_cleanup_inorder(vq, nb_used);
 
+#ifdef RTE_ETHDEV_TX_PREPARE_NOOP
+	nb_pkts = virtio_xmit_pkts_prepare(tx_queue, tx_pkts, nb_pkts);
+#endif
+
 	for (nb_tx = 0; nb_tx < nb_pkts; nb_tx++) {
 		struct rte_mbuf *txm = tx_pkts[nb_tx];
 		int slots;
--- a/config/rte_config.h
+++ b/config/rte_config.h
@@ -58,6 +58,8 @@
 #define RTE_MAX_QUEUES_PER_PORT 1024
 #define RTE_ETHDEV_QUEUE_STAT_CNTRS 16 /* max 256 */
 #define RTE_ETHDEV_RXTX_CALLBACKS 1
+#define RTE_ETHDEV_TX_PREPARE_NOOP 1
+
 
 /* cryptodev defines */
 #define RTE_CRYPTO_MAX_DEVS 64
--- a/drivers/net/virtio/virtio_rxtx_packed_avx.c
+++ b/drivers/net/virtio/virtio_rxtx_packed_avx.c
@@ -264,6 +264,10 @@ virtio_xmit_pkts_packed_vec(void *tx_que
 	if (unlikely(nb_pkts < 1))
 		return nb_pkts;
 
+#ifdef RTE_ETHDEV_TX_PREPARE_NOOP
+	nb_pkts = virtio_xmit_pkts_prepare(tx_queue, tx_pkts, nb_pkts);
+#endif
+
 	PMD_TX_LOG(DEBUG, "%d packets to xmit", nb_pkts);
 
 	if (vq->vq_free_cnt <= vq->vq_nentries - vq->vq_free_thresh)
