From ef2360dff6b7356e7d285dcf3cb69b70acc3e843 Mon Sep 17 00:00:00 2001
From: "Charles (Chas) Williams" <ciwillia@vyatta.att-mail.com>
Date: Thu, 18 Jun 2020 12:43:49 -0400
Subject: [PATCH] net/ixgbe: clear flags when canceling link_thread

If the ixgbe-link-handler thread canceled before having run, then the
IXGBE_FLAG_NEED_LINK_CONFIG flag could potentially remain set. If this
flag isn't clear, then ixgbe_dev_link_update_share will always short
circuit to rte_eth_linkstatus_set and never get a chance to schedule
the ixgbe-link-handler again.

Signed-off-by: Chas Williams <chas3@att.com>
---
 drivers/net/ixgbe/ixgbe_ethdev.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/net/ixgbe/ixgbe_ethdev.c b/drivers/net/ixgbe/ixgbe_ethdev.c
index 3f66b490e..ba5fcfb1c 100644
--- a/drivers/net/ixgbe/ixgbe_ethdev.c
+++ b/drivers/net/ixgbe/ixgbe_ethdev.c
@@ -4144,6 +4144,8 @@ static void
 ixgbe_dev_cancel_link_thread(struct rte_eth_dev *dev)
 {
 	struct ixgbe_adapter *ad = dev->data->dev_private;
+	struct ixgbe_interrupt *intr =
+		IXGBE_DEV_PRIVATE_TO_INTR(dev->data->dev_private);
 	void *retval;
 
 	if (rte_atomic32_read(&ad->link_thread_running)) {
@@ -4151,6 +4153,7 @@ ixgbe_dev_cancel_link_thread(struct rte_eth_dev *dev)
 		pthread_join(ad->link_thread_tid, &retval);
 		rte_atomic32_clear(&ad->link_thread_running);
 	}
+	intr->flags &= ~IXGBE_FLAG_NEED_LINK_CONFIG;
 }
 
 static void *
-- 
2.11.0

